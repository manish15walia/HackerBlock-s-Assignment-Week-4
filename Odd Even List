#include <iostream>
using namespace std;

struct ListNode {
    int val;
    ListNode *next;
    ListNode(int x) : val(x), next(NULL) {}
};

ListNode* oddEvenList(ListNode* head) {
    if (head == NULL || head->next == NULL) {
        return head;
    }
    
    ListNode *odd = head;
    ListNode *even = head->next;
    ListNode *evenHead = even;
    
    while (even != NULL && even->next != NULL) {
        odd->next = even->next;
        odd = odd->next;
        even->next = odd->next;
        even = even->next;
    }
    
    odd->next = evenHead;
    
    return head;
}

int main() {
    int n;
    cin >> n;
    
    ListNode *head = NULL, *tail = NULL;
    int x;
    
    for (int i = 0; i < n; i++) {
        cin >> x;
        ListNode *newNode = new ListNode(x);
        
        if (head == NULL) {
            head = newNode;
            tail = newNode;
        } else {
            tail->next = newNode;
            tail = newNode;
        }
    }
    
    head = oddEvenList(head);
    
    while (head != NULL) {
        cout << head->val << " ";
        head = head->next;
    }
    
    return 0;
}
