#include <iostream>
using namespace std;

struct ListNode {
    int val;
    ListNode *next;
    ListNode(int x) : val(x), next(NULL) {}
};

ListNode* reverseBetween(ListNode* head, int left, int right) {
    if (left == right) {
        return head;
    }
    ListNode *dummy = new ListNode(-1);
    dummy->next = head;
    ListNode *pre = dummy;
    for (int i = 1; i < left; i++) {
        pre = pre->next;
    }
    ListNode *cur = pre->next;
    for (int i = left; i < right; i++) {
        ListNode *next = cur->next;
        cur->next = next->next;
        next->next = pre->next;
        pre->next = next;
    }
    return dummy->next;
}

int main() {
    int n, left, right;
    cin >> n >> left >> right;
    ListNode *head = NULL, *tail = NULL;
    for (int i = 0; i < n; i++) {
        int x;
        cin >> x;
        ListNode *node = new ListNode(x);
        if (head == NULL) {
            head = node;
            tail = node;
        } else {
            tail->next = node;
            tail = tail->next;
        }
    }
    ListNode *newHead = reverseBetween(head, left, right);
    while (newHead != NULL) {
        cout << newHead->val << " ";
        newHead = newHead->next;
    }
    cout << endl;
    return 0;
}
