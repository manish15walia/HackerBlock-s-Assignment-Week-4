#include <bits/stdc++.h>
using namespace std;

struct ListNode {
    int val;
    ListNode* next;
    ListNode(int x) : val(x), next(NULL) {}
};

ListNode* kReverse(ListNode* head, int k) {
    if (!head || k == 1) {
        return head;
    }
    ListNode* dummy = new ListNode(0);
    dummy->next = head;
    ListNode *pre = dummy, *cur = dummy, *nex = dummy;
    int len = 0;
    while (cur->next) {
        cur = cur->next;
        len++;
    }
    while (len >= k) {
        cur = pre->next;
        nex = cur->next;
        for (int i = 1; i < k; i++) {
            cur->next = nex->next;
            nex->next = pre->next;
            pre->next = nex;
            nex = cur->next;
        }
        pre = cur;
        len -= k;
    }
    return dummy->next;
}

int main() {
    int t;
    cin >> t;
    while (t--) {
        int n, k;
        cin >> n;
        ListNode* head = NULL;
        ListNode* tail = NULL;
        for (int i = 0; i < n; i++) {
            int x;
            cin >> x;
            ListNode* temp = new ListNode(x);
            if (!head) {
                head = temp;
                tail = temp;
            } else {
                tail->next = temp;
                tail = tail->next;
            }
        }
        cin >> k;
        head = kReverse(head, k);
        while (head) {
            cout << head->val << " ";
            head = head->next;
        }
        cout << endl;
    }
    return 0;
}
