#include <iostream>
using namespace std;

struct ListNode {
    int val;
    ListNode *next;
    ListNode(int x) : val(x), next(NULL) {}
};

ListNode* swapPairs(ListNode* head) {
    if (head == NULL || head->next == NULL) {
        return head;
    }
    
    ListNode *prev = NULL, *curr = head, *next = head->next;
    
    while (next != NULL) {
        curr->next = next->next;
        next->next = curr;
        
        if (prev == NULL) {
            head = next;
        } else {
            prev->next = next;
        }
        
        prev = curr;
        curr = curr->next;
        
        if (curr == NULL) {
            break;
        }
        
        next = curr->next;
    }
    
    return head;
}

int main() {
    int n;
    cin >> n;
    
    ListNode *head = NULL, *tail = NULL;
    int x;
    
    for (int i = 0; i < n; i++) {
        cin >> x;
        ListNode *newNode = new ListNode(x);
        
        if (head == NULL) {
            head = newNode;
            tail = newNode;
        } else {
            tail->next = newNode;
            tail = newNode;
        }
    }
    
    head = swapPairs(head);
    
    while (head != NULL) {
        cout << head->val << " ";
        head = head->next;
    }
    
    return 0;
}
